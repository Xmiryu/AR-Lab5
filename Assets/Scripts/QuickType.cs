// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var welcome = Welcome.FromJson(jsonString);

namespace QuickType
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class Test
    {
        [JsonProperty("conclusion_raw", NullValueHandling = NullValueHandling.Ignore)]
        public string ConclusionRaw { get; set; }

        [JsonProperty("conclusion_rendered", NullValueHandling = NullValueHandling.Ignore)]
        public string ConclusionRendered { get; set; }

        [JsonProperty("difficulty", NullValueHandling = NullValueHandling.Ignore)]
        public string Difficulty { get; set; }

        [JsonProperty("documents", NullValueHandling = NullValueHandling.Ignore)]
        public object[] Documents { get; set; }

        [JsonProperty("flags", NullValueHandling = NullValueHandling.Ignore)]
        public Flag[] Flags { get; set; }

        [JsonProperty("guideid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Guideid { get; set; }

        [JsonProperty("image", NullValueHandling = NullValueHandling.Ignore)]
        public ImageElement Image { get; set; }

        [JsonProperty("introduction_raw", NullValueHandling = NullValueHandling.Ignore)]
        public string IntroductionRaw { get; set; }

        [JsonProperty("introduction_rendered", NullValueHandling = NullValueHandling.Ignore)]
        public string IntroductionRendered { get; set; }

        [JsonProperty("featured_document_embed_url", NullValueHandling = NullValueHandling.Ignore)]
        public string FeaturedDocumentEmbedUrl { get; set; }

        [JsonProperty("featured_document_thumbnail_url", NullValueHandling = NullValueHandling.Ignore)]
        public string FeaturedDocumentThumbnailUrl { get; set; }

        [JsonProperty("locale", NullValueHandling = NullValueHandling.Ignore)]
        public string Locale { get; set; }

        [JsonProperty("parts", NullValueHandling = NullValueHandling.Ignore)]
        public Part[] Parts { get; set; }

        [JsonProperty("prerequisites", NullValueHandling = NullValueHandling.Ignore)]
        public Prerequisite[] Prerequisites { get; set; }

        [JsonProperty("steps", NullValueHandling = NullValueHandling.Ignore)]
        public Step[] Steps { get; set; }

        [JsonProperty("subject", NullValueHandling = NullValueHandling.Ignore)]
        public string Subject { get; set; }

        [JsonProperty("summary", NullValueHandling = NullValueHandling.Ignore)]
        public string Summary { get; set; }

        [JsonProperty("time_required", NullValueHandling = NullValueHandling.Ignore)]
        public string TimeRequired { get; set; }

        [JsonProperty("time_required_min", NullValueHandling = NullValueHandling.Ignore)]
        public long? TimeRequiredMin { get; set; }

        [JsonProperty("time_required_max", NullValueHandling = NullValueHandling.Ignore)]
        public long? TimeRequiredMax { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("tools", NullValueHandling = NullValueHandling.Ignore)]
        public Tool[] Tools { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("revisionid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Revisionid { get; set; }

        [JsonProperty("created_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? CreatedDate { get; set; }

        [JsonProperty("published_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? PublishedDate { get; set; }

        [JsonProperty("modified_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? ModifiedDate { get; set; }

        [JsonProperty("prereq_modified_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? PrereqModifiedDate { get; set; }

        [JsonProperty("public", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Public { get; set; }

        [JsonProperty("comments", NullValueHandling = NullValueHandling.Ignore)]
        public WelcomeComment[] Comments { get; set; }

        [JsonProperty("category", NullValueHandling = NullValueHandling.Ignore)]
        public string Category { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("patrol_threshold", NullValueHandling = NullValueHandling.Ignore)]
        public long? PatrolThreshold { get; set; }

        [JsonProperty("can_edit", NullValueHandling = NullValueHandling.Ignore)]
        public bool? CanEdit { get; set; }

        [JsonProperty("favorited", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Favorited { get; set; }

        [JsonProperty("author", NullValueHandling = NullValueHandling.Ignore)]
        public WelcomeAuthor Author { get; set; }

        [JsonProperty("langid", NullValueHandling = NullValueHandling.Ignore)]
        public string Langid { get; set; }

        [JsonProperty("featured_documentid")]
        public object FeaturedDocumentid { get; set; }

        [JsonProperty("intro_video_url")]
        public object IntroVideoUrl { get; set; }

        [JsonProperty("intro_video")]
        public object IntroVideo { get; set; }

        [JsonProperty("completed", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Completed { get; set; }
    }

    public partial class WelcomeAuthor
    {
        [JsonProperty("userid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Userid { get; set; }

        [JsonProperty("username", NullValueHandling = NullValueHandling.Ignore)]
        public string Username { get; set; }

        [JsonProperty("unique_username", NullValueHandling = NullValueHandling.Ignore)]
        public string UniqueUsername { get; set; }

        [JsonProperty("join_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? JoinDate { get; set; }

        [JsonProperty("image", NullValueHandling = NullValueHandling.Ignore)]
        public ImageElement Image { get; set; }

        [JsonProperty("reputation", NullValueHandling = NullValueHandling.Ignore)]
        public long? Reputation { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("teams", NullValueHandling = NullValueHandling.Ignore)]
        public long[] Teams { get; set; }
    }

    public partial class ImageElement
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; }

        [JsonProperty("guid", NullValueHandling = NullValueHandling.Ignore)]
        public string Guid { get; set; }

        [JsonProperty("mini", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Mini { get; set; }

        [JsonProperty("thumbnail", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Thumbnail { get; set; }

        [JsonProperty("140x105", NullValueHandling = NullValueHandling.Ignore)]
        public Uri The140X105 { get; set; }

        [JsonProperty("200x150", NullValueHandling = NullValueHandling.Ignore)]
        public Uri The200X150 { get; set; }

        [JsonProperty("standard", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Standard { get; set; }

        [JsonProperty("440x330", NullValueHandling = NullValueHandling.Ignore)]
        public Uri The440X330 { get; set; }

        [JsonProperty("medium", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Medium { get; set; }

        [JsonProperty("large", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Large { get; set; }

        [JsonProperty("huge", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Huge { get; set; }

        [JsonProperty("original", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Original { get; set; }
    }

    public partial class WelcomeComment
    {
        [JsonProperty("commentid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Commentid { get; set; }

        [JsonProperty("locale", NullValueHandling = NullValueHandling.Ignore)]
        public string Locale { get; set; }

        [JsonProperty("context", NullValueHandling = NullValueHandling.Ignore)]
        public string Context { get; set; }

        [JsonProperty("contextid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Contextid { get; set; }

        [JsonProperty("parentid")]
        public object Parentid { get; set; }

        [JsonProperty("author", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleAuthor Author { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("text_raw", NullValueHandling = NullValueHandling.Ignore)]
        public string TextRaw { get; set; }

        [JsonProperty("text_rendered", NullValueHandling = NullValueHandling.Ignore)]
        public string TextRendered { get; set; }

        [JsonProperty("rating", NullValueHandling = NullValueHandling.Ignore)]
        public long? Rating { get; set; }

        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public long? Date { get; set; }

        [JsonProperty("modified_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? ModifiedDate { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("replies", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleReply[] Replies { get; set; }
    }

    public partial class PurpleAuthor
    {
        [JsonProperty("userid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Userid { get; set; }

        [JsonProperty("username", NullValueHandling = NullValueHandling.Ignore)]
        public string Username { get; set; }

        [JsonProperty("unique_username")]
        public string UniqueUsername { get; set; }

        [JsonProperty("join_date")]
        public long? JoinDate { get; set; }

        [JsonProperty("image", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleImage Image { get; set; }

        [JsonProperty("reputation", NullValueHandling = NullValueHandling.Ignore)]
        public long? Reputation { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("teams", NullValueHandling = NullValueHandling.Ignore)]
        public object[] Teams { get; set; }
    }

    public partial class PurpleImage
    {
        [JsonProperty("id", NullValueHandling = NullValueHandling.Ignore)]
        public long? Id { get; set; }

        [JsonProperty("guid", NullValueHandling = NullValueHandling.Ignore)]
        public string Guid { get; set; }

        [JsonProperty("original", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Original { get; set; }

        [JsonProperty("mini", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Mini { get; set; }

        [JsonProperty("thumbnail", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Thumbnail { get; set; }

        [JsonProperty("140x105", NullValueHandling = NullValueHandling.Ignore)]
        public Uri The140X105 { get; set; }

        [JsonProperty("200x150", NullValueHandling = NullValueHandling.Ignore)]
        public Uri The200X150 { get; set; }

        [JsonProperty("standard", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Standard { get; set; }

        [JsonProperty("440x330", NullValueHandling = NullValueHandling.Ignore)]
        public Uri The440X330 { get; set; }

        [JsonProperty("medium", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Medium { get; set; }

        [JsonProperty("large", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Large { get; set; }
    }

    public partial class PurpleReply
    {
        [JsonProperty("commentid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Commentid { get; set; }

        [JsonProperty("locale", NullValueHandling = NullValueHandling.Ignore)]
        public string Locale { get; set; }

        [JsonProperty("context", NullValueHandling = NullValueHandling.Ignore)]
        public string Context { get; set; }

        [JsonProperty("contextid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Contextid { get; set; }

        [JsonProperty("parentid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Parentid { get; set; }

        [JsonProperty("author", NullValueHandling = NullValueHandling.Ignore)]
        public FluffyAuthor Author { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("text_raw", NullValueHandling = NullValueHandling.Ignore)]
        public string TextRaw { get; set; }

        [JsonProperty("text_rendered", NullValueHandling = NullValueHandling.Ignore)]
        public string TextRendered { get; set; }

        [JsonProperty("rating", NullValueHandling = NullValueHandling.Ignore)]
        public long? Rating { get; set; }

        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public long? Date { get; set; }

        [JsonProperty("modified_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? ModifiedDate { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }
    }

    public partial class FluffyAuthor
    {
        [JsonProperty("userid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Userid { get; set; }

        [JsonProperty("username", NullValueHandling = NullValueHandling.Ignore)]
        public string Username { get; set; }

        [JsonProperty("unique_username")]
        public string UniqueUsername { get; set; }

        [JsonProperty("join_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? JoinDate { get; set; }

        [JsonProperty("image", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleImage Image { get; set; }

        [JsonProperty("reputation", NullValueHandling = NullValueHandling.Ignore)]
        public long? Reputation { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("teams", NullValueHandling = NullValueHandling.Ignore)]
        public long[] Teams { get; set; }
    }

    public partial class Flag
    {
        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("flagid", NullValueHandling = NullValueHandling.Ignore)]
        public string Flagid { get; set; }

        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }
    }

    public partial class Part
    {
        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }

        [JsonProperty("notes")]
        public object Notes { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("quantity", NullValueHandling = NullValueHandling.Ignore)]
        public long? Quantity { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public string Url { get; set; }

        [JsonProperty("thumbnail")]
        public Uri Thumbnail { get; set; }
    }

    public partial class Prerequisite
    {
        [JsonProperty("dataType", NullValueHandling = NullValueHandling.Ignore)]
        public string DataType { get; set; }

        [JsonProperty("guideid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Guideid { get; set; }

        [JsonProperty("locale", NullValueHandling = NullValueHandling.Ignore)]
        public string Locale { get; set; }

        [JsonProperty("revisionid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Revisionid { get; set; }

        [JsonProperty("modified_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? ModifiedDate { get; set; }

        [JsonProperty("prereq_modified_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? PrereqModifiedDate { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("category", NullValueHandling = NullValueHandling.Ignore)]
        public string Category { get; set; }

        [JsonProperty("subject", NullValueHandling = NullValueHandling.Ignore)]
        public string Subject { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("summary", NullValueHandling = NullValueHandling.Ignore)]
        public string Summary { get; set; }

        [JsonProperty("difficulty", NullValueHandling = NullValueHandling.Ignore)]
        public string Difficulty { get; set; }

        [JsonProperty("time_required_max", NullValueHandling = NullValueHandling.Ignore)]
        public long? TimeRequiredMax { get; set; }

        [JsonProperty("public", NullValueHandling = NullValueHandling.Ignore)]
        public bool? Public { get; set; }

        [JsonProperty("userid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Userid { get; set; }

        [JsonProperty("username", NullValueHandling = NullValueHandling.Ignore)]
        public string Username { get; set; }

        [JsonProperty("flags", NullValueHandling = NullValueHandling.Ignore)]
        public string[] Flags { get; set; }

        [JsonProperty("image", NullValueHandling = NullValueHandling.Ignore)]
        public ImageElement Image { get; set; }
    }

    public partial class Step
    {
        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("lines", NullValueHandling = NullValueHandling.Ignore)]
        public Line[] Lines { get; set; }

        [JsonProperty("guideid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Guideid { get; set; }

        [JsonProperty("stepid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Stepid { get; set; }

        [JsonProperty("orderby", NullValueHandling = NullValueHandling.Ignore)]
        public long? Orderby { get; set; }

        [JsonProperty("revisionid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Revisionid { get; set; }

        [JsonProperty("media", NullValueHandling = NullValueHandling.Ignore)]
        public Media Media { get; set; }

        [JsonProperty("comments", NullValueHandling = NullValueHandling.Ignore)]
        public StepComment[] Comments { get; set; }
    }

    public partial class StepComment
    {
        [JsonProperty("commentid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Commentid { get; set; }

        [JsonProperty("locale", NullValueHandling = NullValueHandling.Ignore)]
        public string Locale { get; set; }

        [JsonProperty("context", NullValueHandling = NullValueHandling.Ignore)]
        public string Context { get; set; }

        [JsonProperty("contextid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Contextid { get; set; }

        [JsonProperty("parentid")]
        public object Parentid { get; set; }

        [JsonProperty("author", NullValueHandling = NullValueHandling.Ignore)]
        public TentacledAuthor Author { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("text_raw", NullValueHandling = NullValueHandling.Ignore)]
        public string TextRaw { get; set; }

        [JsonProperty("text_rendered", NullValueHandling = NullValueHandling.Ignore)]
        public string TextRendered { get; set; }

        [JsonProperty("rating", NullValueHandling = NullValueHandling.Ignore)]
        public long? Rating { get; set; }

        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public long? Date { get; set; }

        [JsonProperty("modified_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? ModifiedDate { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }

        [JsonProperty("replies", NullValueHandling = NullValueHandling.Ignore)]
        public FluffyReply[] Replies { get; set; }
    }

    public partial class TentacledAuthor
    {
        [JsonProperty("userid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Userid { get; set; }

        [JsonProperty("username", NullValueHandling = NullValueHandling.Ignore)]
        public string Username { get; set; }

        [JsonProperty("unique_username")]
        public string UniqueUsername { get; set; }

        [JsonProperty("join_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? JoinDate { get; set; }

        [JsonProperty("image", NullValueHandling = NullValueHandling.Ignore)]
        public PurpleImage Image { get; set; }

        [JsonProperty("reputation", NullValueHandling = NullValueHandling.Ignore)]
        public long? Reputation { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("teams", NullValueHandling = NullValueHandling.Ignore)]
        public long[] Teams { get; set; }
    }

    public partial class FluffyReply
    {
        [JsonProperty("commentid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Commentid { get; set; }

        [JsonProperty("locale", NullValueHandling = NullValueHandling.Ignore)]
        public string Locale { get; set; }

        [JsonProperty("context", NullValueHandling = NullValueHandling.Ignore)]
        public string Context { get; set; }

        [JsonProperty("contextid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Contextid { get; set; }

        [JsonProperty("parentid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Parentid { get; set; }

        [JsonProperty("author", NullValueHandling = NullValueHandling.Ignore)]
        public StickyAuthor Author { get; set; }

        [JsonProperty("title", NullValueHandling = NullValueHandling.Ignore)]
        public string Title { get; set; }

        [JsonProperty("text_raw", NullValueHandling = NullValueHandling.Ignore)]
        public string TextRaw { get; set; }

        [JsonProperty("text_rendered", NullValueHandling = NullValueHandling.Ignore)]
        public string TextRendered { get; set; }

        [JsonProperty("rating", NullValueHandling = NullValueHandling.Ignore)]
        public long? Rating { get; set; }

        [JsonProperty("date", NullValueHandling = NullValueHandling.Ignore)]
        public long? Date { get; set; }

        [JsonProperty("modified_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? ModifiedDate { get; set; }

        [JsonProperty("status", NullValueHandling = NullValueHandling.Ignore)]
        public string Status { get; set; }
    }

    public partial class StickyAuthor
    {
        [JsonProperty("userid", NullValueHandling = NullValueHandling.Ignore)]
        public long? Userid { get; set; }

        [JsonProperty("username", NullValueHandling = NullValueHandling.Ignore)]
        public string Username { get; set; }

        [JsonProperty("unique_username")]
        public string UniqueUsername { get; set; }

        [JsonProperty("join_date", NullValueHandling = NullValueHandling.Ignore)]
        public long? JoinDate { get; set; }

        [JsonProperty("image", NullValueHandling = NullValueHandling.Ignore)]
        public ImageElement Image { get; set; }

        [JsonProperty("reputation", NullValueHandling = NullValueHandling.Ignore)]
        public long? Reputation { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("teams", NullValueHandling = NullValueHandling.Ignore)]
        public long[] Teams { get; set; }
    }

    public partial class Line
    {
        [JsonProperty("text_raw", NullValueHandling = NullValueHandling.Ignore)]
        public string TextRaw { get; set; }

        [JsonProperty("bullet", NullValueHandling = NullValueHandling.Ignore)]
        public string Bullet { get; set; }

        [JsonProperty("level", NullValueHandling = NullValueHandling.Ignore)]
        public long? Level { get; set; }

        [JsonProperty("lineid")]
        public object Lineid { get; set; }

        [JsonProperty("text_rendered", NullValueHandling = NullValueHandling.Ignore)]
        public string TextRendered { get; set; }
    }

    public partial class Media
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("data", NullValueHandling = NullValueHandling.Ignore)]
        public ImageElement[] Data { get; set; }
    }

    public partial class Tool
    {
        [JsonProperty("type", NullValueHandling = NullValueHandling.Ignore)]
        public string Type { get; set; }

        [JsonProperty("quantity", NullValueHandling = NullValueHandling.Ignore)]
        public long? Quantity { get; set; }

        [JsonProperty("text", NullValueHandling = NullValueHandling.Ignore)]
        public string Text { get; set; }

        [JsonProperty("notes")]
        public object Notes { get; set; }

        [JsonProperty("url", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Url { get; set; }

        [JsonProperty("thumbnail", NullValueHandling = NullValueHandling.Ignore)]
        public Uri Thumbnail { get; set; }
    }

    public partial class Test
    {
        public static Test FromJson(string json) => JsonConvert.DeserializeObject<Test>(json, QuickType.Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this Test self) => JsonConvert.SerializeObject(self, QuickType.Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
